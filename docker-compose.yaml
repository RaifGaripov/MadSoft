version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_memes
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - my_network

  test_db:
    build:
      context: .
      dockerfile: Dockerfile.postgres_test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_memes
    ports:
      - "5433:5433"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./init_test.sql:/docker-entrypoint-initdb.d/init_test.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - my_network

  public_api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      db:
          condition: service_healthy
      test_db:
          condition: service_healthy

    volumes:
      - .:/app
    restart: always
    networks:
      - my_network

  private_api:
    build:
      context: .
      dockerfile: Dockerfile.private
    ports:
      - "8000:8000"
    depends_on:
      db:
          condition: service_healthy
      test_db:
          condition: service_healthy
    volumes:
      - .:/app
    restart: always
    networks:
      - my_network

  s3:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio_data:/data
    restart: always
    networks:
      - my_network

volumes:
  postgres_data:
  minio_data:
  test_postgres_data:

networks:
  my_network:
    driver: bridge